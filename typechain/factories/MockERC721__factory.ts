/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockERC721, MockERC721Interface } from "../MockERC721";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "TOTAL_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseTokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "mintTo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseTokenURI",
        type: "string",
      },
    ],
    name: "setBaseTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604080518082018252600b81526a4d6f636b2045524337323160a81b60208083019182528351808501909452600a8452694d6f636b45524337323160b01b9084015281519192916200006791600091620000a8565b5080516200007d906001906020840190620000a8565b5050604080516020810191829052600090819052620000a1925060079190620000a8565b506200018b565b828054620000b6906200014e565b90600052602060002090601f016020900481019282620000da576000855562000125565b82601f10620000f557805160ff191683800117855562000125565b8280016001018555821562000125579182015b828111156200012557825182559160200191906001019062000108565b506200013392915062000137565b5090565b5b8082111562000133576000815560010162000138565b600181811c908216806200016357607f821691505b602082108114156200018557634e487b7160e01b600052602260045260246000fd5b50919050565b6119cc806200019b6000396000f3fe608060405234801561001057600080fd5b506004361061011b5760003560e01c806370a08231116100b2578063a22cb46511610081578063c87b56dd11610066578063c87b56dd14610254578063d547cfb714610267578063e985e9c51461026f57600080fd5b8063a22cb4651461022e578063b88d4fde1461024157600080fd5b806370a08231146101e9578063755edd171461020a578063902d55a51461021d57806395d89b411461022657600080fd5b806323b872dd116100ee57806323b872dd1461019d57806330176e13146101b057806342842e0e146101c35780636352211e146101d657600080fd5b806301ffc9a71461012057806306fdde0314610148578063081812fc1461015d578063095ea7b314610188575b600080fd5b61013361012e366004611503565b6102ab565b60405190151581526020015b60405180910390f35b610150610390565b60405161013f9190611578565b61017061016b36600461158b565b610422565b6040516001600160a01b03909116815260200161013f565b61019b6101963660046115c0565b6104cd565b005b61019b6101ab3660046115ea565b6105ff565b61019b6101be3660046116b2565b610686565b61019b6101d13660046115ea565b61069d565b6101706101e436600461158b565b6106b8565b6101fc6101f73660046116fb565b610743565b60405190815260200161013f565b6101fc6102183660046116fb565b6107dd565b6101fc61271081565b610150610868565b61019b61023c366004611716565b610877565b61019b61024f366004611752565b610882565b61015061026236600461158b565b610910565b6101506109f8565b61013361027d3660046117ce565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f80ac58cd00000000000000000000000000000000000000000000000000000000148061033e57507fffffffff0000000000000000000000000000000000000000000000000000000082167f5b5e139f00000000000000000000000000000000000000000000000000000000145b8061038a57507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b60606000805461039f90611801565b80601f01602080910402602001604051908101604052809291908181526020018280546103cb90611801565b80156104185780601f106103ed57610100808354040283529160200191610418565b820191906000526020600020905b8154815290600101906020018083116103fb57829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166104b15760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201527f697374656e7420746f6b656e000000000000000000000000000000000000000060648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006104d8826106b8565b9050806001600160a01b0316836001600160a01b031614156105625760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f720000000000000000000000000000000000000000000000000000000000000060648201526084016104a8565b336001600160a01b038216148061057e575061057e813361027d565b6105f05760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016104a8565b6105fa8383610a86565b505050565b6106093382610b01565b61067b5760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f76656400000000000000000000000000000060648201526084016104a8565b6105fa838383610c09565b8051610699906007906020840190611439565b5050565b6105fa83838360405180602001604052806000815250610882565b6000818152600260205260408120546001600160a01b03168061038a5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201527f656e7420746f6b656e000000000000000000000000000000000000000000000060648201526084016104a8565b60006001600160a01b0382166107c15760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a6560448201527f726f20616464726573730000000000000000000000000000000000000000000060648201526084016104a8565b506001600160a01b031660009081526003602052604090205490565b6000806107e960065490565b9050612710811061083c5760405162461bcd60e51b815260206004820152601260248201527f4d617820737570706c792072656163686564000000000000000000000000000060448201526064016104a8565b61084a600680546001019055565b600061085560065490565b90506108618482610de3565b9392505050565b60606001805461039f90611801565b610699338383610dfd565b61088c3383610b01565b6108fe5760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f76656400000000000000000000000000000060648201526084016104a8565b61090a84848484610eea565b50505050565b6000818152600260205260409020546060906001600160a01b031661099d5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201527f6e6578697374656e7420746f6b656e000000000000000000000000000000000060648201526084016104a8565b60006109a7610f73565b905060008151116109c75760405180602001604052806000815250610861565b806109d184610f82565b6040516020016109e292919061183c565b6040516020818303038152906040529392505050565b60078054610a0590611801565b80601f0160208091040260200160405190810160405280929190818152602001828054610a3190611801565b8015610a7e5780601f10610a5357610100808354040283529160200191610a7e565b820191906000526020600020905b815481529060010190602001808311610a6157829003601f168201915b505050505081565b6000818152600460205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0384169081179091558190610ac8826106b8565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b0316610b8b5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201527f697374656e7420746f6b656e000000000000000000000000000000000000000060648201526084016104a8565b6000610b96836106b8565b9050806001600160a01b0316846001600160a01b03161480610bdd57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610c015750836001600160a01b0316610bf684610422565b6001600160a01b0316145b949350505050565b826001600160a01b0316610c1c826106b8565b6001600160a01b031614610c985760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e657200000000000000000000000000000000000000000000000000000060648201526084016104a8565b6001600160a01b038216610d135760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016104a8565b610d1e600082610a86565b6001600160a01b0383166000908152600360205260408120805460019290610d47908490611881565b90915550506001600160a01b0382166000908152600360205260408120805460019290610d75908490611898565b9091555050600081815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6106998282604051806020016040528060008152506110b4565b816001600160a01b0316836001600160a01b03161415610e5f5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016104a8565b6001600160a01b0383811660008181526005602090815260408083209487168084529482529182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610ef5848484610c09565b610f018484848461113d565b61090a5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e746572000000000000000000000000000060648201526084016104a8565b60606007805461039f90611801565b606081610fc257505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115610fec5780610fd6816118b0565b9150610fe59050600a836118ff565b9150610fc6565b60008167ffffffffffffffff81111561100757611007611626565b6040519080825280601f01601f191660200182016040528015611031576020820181803683370190505b5090505b8415610c0157611046600183611881565b9150611053600a86611913565b61105e906030611898565b60f81b81838151811061107357611073611927565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506110ad600a866118ff565b9450611035565b6110be83836112ea565b6110cb600084848461113d565b6105fa5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e746572000000000000000000000000000060648201526084016104a8565b60006001600160a01b0384163b156112df576040517f150b7a020000000000000000000000000000000000000000000000000000000081526001600160a01b0385169063150b7a029061119a90339089908890889060040161193d565b602060405180830381600087803b1580156111b457600080fd5b505af19250505080156111e4575060408051601f3d908101601f191682019092526111e191810190611979565b60015b611294573d808015611212576040519150601f19603f3d011682016040523d82523d6000602084013e611217565b606091505b50805161128c5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e746572000000000000000000000000000060648201526084016104a8565b805181602001fd5b7fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a0200000000000000000000000000000000000000000000000000000000149050610c01565b506001949350505050565b6001600160a01b0382166113405760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016104a8565b6000818152600260205260409020546001600160a01b0316156113a55760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016104a8565b6001600160a01b03821660009081526003602052604081208054600192906113ce908490611898565b9091555050600081815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b82805461144590611801565b90600052602060002090601f01602090048101928261146757600085556114ad565b82601f1061148057805160ff19168380011785556114ad565b828001600101855582156114ad579182015b828111156114ad578251825591602001919060010190611492565b506114b99291506114bd565b5090565b5b808211156114b957600081556001016114be565b7fffffffff000000000000000000000000000000000000000000000000000000008116811461150057600080fd5b50565b60006020828403121561151557600080fd5b8135610861816114d2565b60005b8381101561153b578181015183820152602001611523565b8381111561090a5750506000910152565b60008151808452611564816020860160208601611520565b601f01601f19169290920160200192915050565b602081526000610861602083018461154c565b60006020828403121561159d57600080fd5b5035919050565b80356001600160a01b03811681146115bb57600080fd5b919050565b600080604083850312156115d357600080fd5b6115dc836115a4565b946020939093013593505050565b6000806000606084860312156115ff57600080fd5b611608846115a4565b9250611616602085016115a4565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561165757611657611626565b604051601f8501601f19908116603f0116810190828211818310171561167f5761167f611626565b8160405280935085815286868601111561169857600080fd5b858560208301376000602087830101525050509392505050565b6000602082840312156116c457600080fd5b813567ffffffffffffffff8111156116db57600080fd5b8201601f810184136116ec57600080fd5b610c018482356020840161163c565b60006020828403121561170d57600080fd5b610861826115a4565b6000806040838503121561172957600080fd5b611732836115a4565b91506020830135801515811461174757600080fd5b809150509250929050565b6000806000806080858703121561176857600080fd5b611771856115a4565b935061177f602086016115a4565b925060408501359150606085013567ffffffffffffffff8111156117a257600080fd5b8501601f810187136117b357600080fd5b6117c28782356020840161163c565b91505092959194509250565b600080604083850312156117e157600080fd5b6117ea836115a4565b91506117f8602084016115a4565b90509250929050565b600181811c9082168061181557607f821691505b6020821081141561183657634e487b7160e01b600052602260045260246000fd5b50919050565b6000835161184e818460208801611520565b835190830190611862818360208801611520565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156118935761189361186b565b500390565b600082198211156118ab576118ab61186b565b500190565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156118e2576118e261186b565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261190e5761190e6118e9565b500490565b600082611922576119226118e9565b500690565b634e487b7160e01b600052603260045260246000fd5b60006001600160a01b0380871683528086166020840152508360408301526080606083015261196f608083018461154c565b9695505050505050565b60006020828403121561198b57600080fd5b8151610861816114d256fea2646970667358221220b0a678b5fd768b8673d1bd26d72a7f3764f91464ab4a11497699b4f52008c8e664736f6c63430008090033";

export class MockERC721__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockERC721> {
    return super.deploy(overrides || {}) as Promise<MockERC721>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockERC721 {
    return super.attach(address) as MockERC721;
  }
  connect(signer: Signer): MockERC721__factory {
    return super.connect(signer) as MockERC721__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockERC721Interface {
    return new utils.Interface(_abi) as MockERC721Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockERC721 {
    return new Contract(address, _abi, signerOrProvider) as MockERC721;
  }
}
